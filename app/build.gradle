apply plugin: 'android-sdk-manager'
apply plugin: 'android'
apply plugin: 'crashlytics'
apply plugin: 'android-apt'
apply plugin: 'robolectric'
apply plugin: 'retrolambda'
apply plugin: 'versions'

android {
    final APPLICATION_ID = "com.flatstack.android"

    compileSdkVersion 19
    buildToolsVersion '19.1'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19

        applicationId APPLICATION_ID
        versionCode 1
        versionName '0.1.0'
    }

    productFlavors {
        staging {
            buildConfigField "String", "API_URL", "\"https://example-staging.com\""
            applicationId "${APPLICATION_ID}.staging"
        }

        production {
            buildConfigField "String", "API_URL", "\"https://example.com\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    final IS_TRAVIS = "true".equals(System.getenv("TRAVIS"))
    final PRE_DEX_ENABLED = "true".equals(System.getProperty("pre-dex", "true"))

    dexOptions {
        preDexLibraries = PRE_DEX_ENABLED && !IS_TRAVIS
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        enable 'IconExpectedSize', 'EasterEgg', 'SelectableText', 'StopShip', 'TypographyQuotes', 'UnusedIds'
        disable 'InvalidPackage'
        warningsAsErrors true
    }

    sourceSets {
        main {
            androidTest.setRoot('src/test')
        }
    }
}

retrolambda {
    jdk System.getenv("JAVA8_HOME")
    oldJdk System.getenv("JAVA7_HOME")
    javaVersion JavaVersion.VERSION_1_7
}

repositories {
    // crashlytics
    maven { url 'http://download.crashlytics.com/maven' }
}

final DAGGER_VERSION = '1.2.1'
final ESPERANDRO_VERSION = '2.0.0'

dependencies {
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:1.3.0'
    compile 'com.crashlytics.android:crashlytics:1.+'

    compile "com.mixpanel.android:mixpanel-android:4.2.1@aar"

    compile 'com.netflix.rxjava:rxjava-android:0.19.0' // FRP

    compile 'com.jakewharton:butterknife:5.1.0' // view injection
    compile 'com.jakewharton.timber:timber:2.4.0' // logging

    compile "com.squareup.dagger:dagger:$DAGGER_VERSION" // DI
    apt "com.squareup.dagger:dagger-compiler:$DAGGER_VERSION"
    compile 'com.squareup.picasso:picasso:2.3.2' // image loading
    compile 'com.squareup.okhttp:okhttp:2.0.0-RC2' // HTTP client
    compile 'com.squareup.retrofit:retrofit:1.6.0'
    compile 'com.intellij:annotations:12.0' // @Nullable @NotNull

    compile 'org.projectlombok:lombok:1.14.2' // POJO boilerplate

    compile 'nl.qbusict:cupboard:2.0.1' // sql boilerplate

    compile files('libs/argument-1.0.3.jar') // fragment arguments boilerplate

    compile 'com.github.mttkay.memento:memento:0.2' // retaining objects in activity
    apt 'com.github.mttkay.memento:memento-processor:0.2'

    apt "de.devland.esperandro:esperandro:$ESPERANDRO_VERSION" // shared prefs boilerplate
    compile "de.devland.esperandro:esperandro-api:$ESPERANDRO_VERSION"
    compile "de.devland.esperandro:esperandro-gson-addon:$ESPERANDRO_VERSION"

    compile 'uk.co.chrisjenx.calligraphy:calligraphy:0.6.0' // custom fonts made easy

    androidTestCompile 'com.android.support:support-v4:19.1.0'
    androidTestCompile "com.squareup.dagger:dagger-compiler:$DAGGER_VERSION"
    androidTestCompile 'junit:junit:4.11'
    androidTestCompile 'org.mockito:mockito-all:1.9.5'
    androidTestCompile 'org.robolectric:robolectric:2.3'
    androidTestCompile 'com.squareup:fest-android:1.0.8'
}